@model TheatreCMS.Models.Production
@using TheatreCMS.Controllers

@{
    ViewBag.Title = "Delete";
}

<h2>Delete</h2>
<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Production</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Playwright)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Playwright)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Runtime)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Runtime)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.OpeningDay)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OpeningDay)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ClosingDay)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ClosingDay)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DefaultPhoto)
        </dt>

        <dd>
            @{
                if (Model.DefaultPhoto != null)
                {
                    <img src='@Url.Action("DisplayPhoto", "Photo", new { id = Model.DefaultPhoto.PhotoId})' alt="Production promo photo" />

                    @*<img src="data:image;base64,@System.Convert.ToBase64String(Model.DefaultPhoto.Photo)" />*@

                    //byte[] thumbBytes = ImageUploadController.ImageThumbnail(item.PromoPhoto, 370, 250);
                    //var base64 = System.Convert.ToBase64String(thumbBytes);
                    //img = String.Format("data:image/png;base64,{0}", base64);
                }
                else
                {
                    <p>No image yet</p>
                }
            }
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ShowtimeEve)

        </dt>

        <dd>
            @Html.DisplayFor(model => model.ShowtimeEve)

        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ShowtimeMat)

        </dt>

        <dd>
            @Html.DisplayFor(model => model.ShowtimeMat)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TicketLink)

        </dt>

        <dd>
            @Html.DisplayFor(model => model.TicketLink)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Season)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Season)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsCurrent)

        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsCurrent)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsWorldPremiere)

        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsWorldPremiere)
        </dd>
      

    </dl>

    @using (Html.BeginForm()) {
        @Html.AntiForgeryToken()

<div class="form-actions no-color">
    <input type="submit" value="Delete" class="btn" /> |
    @Html.ActionLink("Current Productions", "Current") |
    @Html.ActionLink("Back to List", "Index")
</div>
    }
</div>
