@model TheatreCMS.Models.Production
@using TheatreCMS.Controllers

@Scripts.Render("~/Scripts/Site.js")


@*old stuff*@
@*<div class="details-container">
  <img src='@Url.Action("DisplayPhoto", "Photo", new { id = Model.DefaultPhoto.PhotoId })' class="production-details-background" />*@
<div class="production-details-container">
  <img src='@Url.Action("DisplayPhoto", "Photo", new { id = Model.DefaultPhoto.PhotoId })' class="production-details-background" />
</div>
<div class="container">
  <div>
    <div class="row justify-content-xl-start text-center">
      <div class="col-12">
        <dl>
          <dd class="col">
            <div class="jumbotron mr-4" id="jumbo"><h1><b> @Html.DisplayFor(model => model.Title)</b></h1></div>
          </dd>

        </dl>
      </div>
    </div>

    <div class="row">
      <div class="col-md-4">
        <div class="card bg-info mr-4" id="cardss">
          <div class="card-header" id="head">
            <b>Days Playing</b>
          </div>
          <ul class="list-group list-group-flush text-black-50">

            <li class="list-group-item">
              Opening Day
              <dl>

                <dd class="col">
                  @Html.DisplayFor(model => model.OpeningDay)
                </dd>
              </dl>
            </li>
            <li class="list-group-item">
              Closing Day
              <dl>
                <dd class="col">
                  @Html.DisplayFor(model => model.ClosingDay)
                </dd>
              </dl>
            </li>
          </ul>
        </div>


        <div class="card bg-info mr-4" id="cardss">
          <div class="card-header" id="head">
            <b>Show Time and Length</b>
          </div>
          <ul class="list-group list-group-flush text-black-50">

            <li class="list-group-item">
              Run Time
              <dl>
                <dd class="col">
                  @Html.DisplayFor(model => model.Runtime)
                </dd>
              </dl>
            </li>
            <li class="list-group-item">
              Evening Show Time
              <dl>
                <dd class="col">
                  @Html.DisplayFor(model => model.ShowtimeEve)
                </dd>
              </dl>
            </li>
            <li class="list-group-item">
              Matinee Show Time
              <dl>
                <dd class="col">
                  @Html.DisplayFor(model => model.ShowtimeMat)
                </dd>
              </dl>
            </li>
          </ul>
        </div>




        <!--Iterate through Parts for a specific Type of role and if there is data it will display the below item in the Parts card. If no data is returned it will not display-->
        <!--===================================================
              The below refactors the parts section
        ===================================================-->
        <!-- Parts Card Section visible when screen size is bigger-->
        <div class="card mr-4 d-none d-md-block" id="cardss">
          <!-- when screen size is med or bigger this will display. It is otherwise hidden-->
          <div class="card-header" id="head">
            <b>Parts</b>
          </div>
          <ul class="list-group list-group-flush text-black-50">
            @{var part = new TheatreCMS.Enum.PositionEnum();}
            @{List<TheatreCMS.Models.Part> parts = new List<TheatreCMS.Models.Part>();}
            @foreach (int position in ViewBag.Positions)
            {
              parts.Clear();
              part = (TheatreCMS.Enum.PositionEnum)position;
              parts = Model.Parts.Where(x => x.Type == part).ToList();
              if (parts != null && parts.Any())
              {
                <li class="list-group-item">
                  @(part)s
                  <dl>
                    @foreach (var item in parts)
                    {
                      if (item != null && part.ToString() == "Actor")
                      {
                        <dd class="col">
                          <a href="/Part/Details/@item.PartID">@Html.Raw(@item.Character)</a>
                        </dd>
                        <dd class="col">
                          <p class="prod-details-actor-info"> played by <a class="prod-details-actor-info-link" href="/CastMembers/Details/@item.Person.CastMemberID">@item.Person.Name.ToString()</a></p>
                        </dd>
                      }
                      else if (item != null)
                      {
                        <dd class="col">
                          <a href="/Part/Details/@item.PartID">@Html.Raw(@item.Character)</a>
                        </dd>
                      }
                    }
                  </dl>
                </li>
              }
            }
          </ul>
        </div>
        <!-- End Parts Card Section-->
      </div>

      @*@{var actor = Model.Parts.Where(t => t.Type == TheatreCMS.Enum.PositionEnum.Actor);
            if (actor != null && actor.Any())
            {
                <li class="list-group-item">
                    Actors
                    <dl>
                        @foreach (var item in actor)
                        {
                            if (item != null)
                            {
                                <dd class="col">
                                    <a href="/Part/Details/@item.PartID">@Html.Raw(@item.Character)</a>
                                </dd>
                            }
                        }
                    </dl>
                </li>
            }
        }*@

      @*@{var director = Model.Parts.Where(t => t.Type == TheatreCMS.Enum.PositionEnum.Director);
            if (director != null && director.Any())
            {
                <li class="list-group-item">
                    Directors
                    <dl>
                        @foreach (var item in director)
                        {
                            if (item != null)
                            {
                                <dd class="col">
                                    <a href="/Part/Details/@item.PartID">@Html.Raw(@item.Character)</a>
                                </dd>
                            }
                        }
                    </dl>
                </li>
            }
        }

        @{var stagemanager = Model.Parts.Where(t => t.Type == TheatreCMS.Enum.PositionEnum.StageManager);
            if (stagemanager != null && stagemanager.Any())
            {
                <li class="list-group-item">
                    Stage Managers
                    <dl>
                        @foreach (var item in stagemanager)
                        {
                            if (item != null)
                            {
                                <dd class="col">
                                    <a href="/Part/Details/@item.PartID">@Html.Raw(@item.Character)</a>
                                </dd>
                            }
                        }
                    </dl>
                </li>
            }
        }


        @{var technician = Model.Parts.Where(t => t.Type == TheatreCMS.Enum.PositionEnum.Technician);
            if (technician != null && technician.Any())
            {
                <li class="list-group-item">
                    Technicians
                    <dl>
                        @foreach (var item in technician)
                        {
                            if (item != null)
                            {
                                <dd class="col">
                                    <a href="/Part/Details/@item.PartID">@Html.Raw(@item.Character)</a>
                                </dd>
                            }
                        }
                    </dl>
                </li>
            }
        }

        @{var other = Model.Parts.Where(t => t.Type == TheatreCMS.Enum.PositionEnum.Other);
            if (other != null && other.Any())
            {
                <li class="list-group-item">
                    Other
                    <dl>
                        @foreach (var item in other)
                        {
                            if (item != null)
                            {
                                <dd class="col">
                                    <a href="/Part/Details/@item.PartID">@Html.Raw(@item.Character)</a>
                                </dd>
                            }
                        }
                    </dl>
                </li>
            }
        }*@

      <div class="col-md-8">

        <div class="card text-center bg-white text-black-50 mr-4" id="cardss">

          <h5 class="card-header text-white" id="head"><b>About The Production</b></h5>

          <img src='@Url.Action("DisplayPhoto", "Photo", new { id = Model.DefaultPhoto.PhotoId })' id="DisplayImg" />
          <dl class="dl-horizontal justify-content-start col">

            <dt class="col">
              @Html.DisplayNameFor(model => model.Title)
            </dt>

            <dd class="col">
              @Html.DisplayFor(model => model.Title)
            </dd>

            <dt class="col">
              @Html.DisplayNameFor(model => model.Playwright)
            </dt>

            <dd class="col">
              @Html.DisplayFor(model => model.Playwright)
            </dd>
            <div class="text-center">
              <dl>

                <dt class="col flex-md-row">
                  @Html.DisplayNameFor(model => model.Description)
                </dt>

                <dd class="col">
                  @Html.DisplayFor(model => model.Description)
                </dd>

                <dt class="col">
                  @Html.DisplayNameFor(model => model.Season)
                </dt>

                <dd class="col">
                  @Html.DisplayFor(model => model.Season)
                </dd>

                <dt class="col">
                  @Html.DisplayNameFor(model => model.IsCurrent)

                </dt>

                <dd class="col">
                  @Html.DisplayFor(model => model.IsCurrent)
                </dd>

                <dt class="col">
                  @Html.DisplayNameFor(model => model.IsWorldPremiere)

                </dt>

                <dd class="col">
                  @Html.DisplayFor(model => model.IsWorldPremiere)
                </dd>


              </dl>
            </div>

          </dl>
          <div class="card text-center bg-white text-black-50" id="cardss">
            <div class="card-body">
              <h5 class="card-title">Where To Buy?</h5>
              <p class="card-text"
                                <dl>
                                    <dd class="col">
                                        Get your tickets online! at @Html.DisplayFor(model => model.TicketLink)
                                    </dd>

                                </dl>
                            </p>
              <a href="#" class="btn btn-primary">buy now</a>
            </div>
          </div>
        </div>

        <!-- Parts Card Section visible when screen size small -->
        <!--===================================================
        The below refactors the parts section for a small screen
         ===================================================-->


        <div class="card bg-info mr-4 d-md-none" id="cardss">
          <!-- when screen size is md or bigger this will not display. So when screen size is sm/mobile view it will be visible but otherwise hidden -->
          <div class="card-header" id="head">
            <b>Parts</b>
          </div>
          <ul class="list-group list-group-flush text-black-50">
            @{var part1 = new TheatreCMS.Enum.PositionEnum();}
            @{List<TheatreCMS.Models.Part> parts1 = new List<TheatreCMS.Models.Part>();}
            @foreach (int position in ViewBag.Positions)
            {
              parts1.Clear();
              part1 = (TheatreCMS.Enum.PositionEnum)position;
              parts1 = Model.Parts.Where(x => x.Type == part1).ToList();
              if (parts1 != null && parts1.Any())
              {
                <li class="list-group-item">
                  @(part1)s
                  <dl>
                    @foreach (var item in parts1)
                    {
                      if (item != null && part1.ToString() == "Actor")
                      {
                        <dd class="col">
                          <a href="/Part/Details/@item.PartID">@Html.Raw(@item.Character)</a>
                        </dd>
                        <dd class="col">
                          <p class="prod-details-actor-info"> played by <a class="prod-details-actor-info-link" href="/CastMembers/Details/@item.Person.CastMemberID"><i>@item.Person.Name.ToString()</i></a></p>
                        </dd>
                      }
                      else if (item != null)
                      {
                        <dd class="col">
                          <a href="/Part/Details/@item.PartID">@Html.Raw(@item.Character)</a>
                        </dd>
                      }
                    }
                  </dl>
                </li>
              }
            }
          </ul>
        </div>




        <!--Iterate through Parts for a specific Type of role and if there is data it will display the below item in the Parts card. If no data is returned it will not display-->
        @*@{var actorsm = Model.Parts.Where(t => t.Type == TheatreCMS.Enum.PositionEnum.Actor);
                  if (actorsm != null && actorsm.Any())
                  {
                      <li class="list-group-item">
                          Actors
                          <dl>
                              @foreach (var item in actorsm)
                              {
                                  if (item != null)
                                  {
                                      <dd class="col">
                                          <a href="/Part/Details/@item.PartID">@Html.Raw(@item.Character)</a>
                                      </dd>
                                  }
                              }
                          </dl>
                      </li>
                  }
              }

              @{var directorsm = Model.Parts.Where(t => t.Type == TheatreCMS.Enum.PositionEnum.Director);
                  if (directorsm != null && directorsm.Any())
                  {
                      <li class="list-group-item">
                          Directors
                          <dl>
                              @foreach (var item in directorsm)
                              {
                                  if (item != null)
                                  {
                                      <dd class="col">
                                          <a href="/Part/Details/@item.PartID">@Html.Raw(@item.Character)</a>
                                      </dd>
                                  }
                              }
                          </dl>
                      </li>
                  }
              }

              @{var stagemanagersm = Model.Parts.Where(t => t.Type == TheatreCMS.Enum.PositionEnum.StageManager);
                  if (stagemanagersm != null && stagemanagersm.Any())
                  {
                      <li class="list-group-item">
                          Stage Managers
                          <dl>
                              @foreach (var item in stagemanagersm)
                              {
                                  if (item != null)
                                  {
                                      <dd class="col">
                                          <a href="/Part/Details/@item.PartID">@Html.Raw(@item.Character)</a>
                                      </dd>
                                  }
                              }
                          </dl>
                      </li>
                  }
              }


              @{var techniciansm = Model.Parts.Where(t => t.Type == TheatreCMS.Enum.PositionEnum.Technician);
                  if (techniciansm != null && techniciansm.Any())
                  {
                      <li class="list-group-item">
                          Technicians
                          <dl>
                              @foreach (var item in techniciansm)
                              {
                                  if (item != null)
                                  {
                                      <dd class="col">
                                          <a href="/Part/Details/@item.PartID">@Html.Raw(@item.Character)</a>
                                      </dd>
                                  }
                              }
                          </dl>
                      </li>
                  }
              }

              @{var othersm = Model.Parts.Where(t => t.Type == TheatreCMS.Enum.PositionEnum.Other);
                  if (othersm != null && othersm.Any())
                  {
                      <li class="list-group-item">
                          Other
                          <dl>
                              @foreach (var item in othersm)
                              {
                                  if (item != null)
                                  {
                                      <dd class="col">
                                          <a href="/Part/Details/@item.PartID">@Html.Raw(@item.Character)</a>
                                      </dd>
                                  }
                              }
                          </dl>
                      </li>
                  }
              }

          </ul>
          </div>*@
        <!-- End Parts Card Section-->
        @* Old code for the Parts data. Commented out.
          <div class="justify-content-end col-md-3">
              <dl>
                  @if (Model.Parts.Count != 0)
                  {
                      <dt>
                          @Html.DisplayNameFor(model => model.Parts)
                      </dt>
                      foreach (var part in Model.Parts)
                      {
                          <dd>
                              <a href="/Part/Details/@part.PartID">@Html.DisplayFor(model => part.Character)</a>
                          </dd>
                      }
                  }
              </dl>
          </div>*@
      </div>


    </div>
  </div>
</div>
@*</div>*@

@*Shows/hides edit link depending on user role.*@
<p>
  @if (ViewContext.HttpContext.User.IsInRole("Admin"))
  {
    @Html.ActionLink("Edit", "Edit", new { id = Model.ProductionId }) @:|
  }
    @Html.ActionLink("Current Productions", "Current") |
    @Html.ActionLink("Back to List", "Index")
</p>