@model IEnumerable<TheatreCMS.Models.Production>

@{
    ViewBag.Title = "Current Production";
}

<h2 class="center">Current Production</h2>

@*verifies role of user and only displays link if logged in as admin*@
@if (User.IsInRole("Admin"))
{
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
}

@* Cycle through each object displaying individual results*@
@foreach (var item in Model)
{   <div class="row flex-col-12 justify-content-center">
        @*This Row is used to set the elements of the card side by mx-auto side instead of a classic over under*@
        @*<div class="col-md-5 col-sm-6 col-lg-2"></div>*@ @*This pushes the elements to the center of the view*@
        <div class="col-md-4 col-sm-5 col-lg-3">
            <div class="card my-2 rh-25 palette-container overflow-hidden">
                @*Create a card, that hides the corners of the image and is spaced slightly away from each other*@
                @Html.DisplayFor(modelItem => item.DefaultPhoto)
                @* This is where we'll need to display the image from the byte[] in the database. *@
                <img src="https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fimg3.wikia.nocookie.net%2F__cb20070821135049%2Fillogicopedia%2Fimages%2Fthumb%2F9%2F91%2FDuck_patrol.JPG%2F500px-Duck_patrol.JPG&f=1&nofb=1" />
            </div>
        </div>
        <div class="card my-auto col-md-4 col-sm-5 col-lg-3 palette-body">
            @*.....Create 'Info' Card...................*@
            <div class="card-body rh-25">
                @*...............fixes row height......... *@
                <div class="container position-absolute overflow-auto">
                    <h5>
                        @*.........................................Big text for play*@
                        @Html.DisplayFor(modelItem => item.Title)
                        <small>
                            @*.................................Small text for author*@
                            by @Html.DisplayFor(modelItem => item.Playwright)<br />
                            @if (item.IsWorldPremiere == true)
                            {
                                @Html.DisplayNameFor(model => model.IsWorldPremiere)
                            }
                        </small>
                    </h5>
                    <div class="row">
                        <div class="col-8">
                            <p>
                                @item.OpeningDay.ToString("M/d/yy") - @item.ClosingDay.ToString("M/d/yy")<br /> @*shows open to close*@
                                <br />
                                @if (item.ShowtimeEve != null)
                                {
                                    @Html.DisplayNameFor(model => model.ShowtimeEve) <span> : </span> @item.ShowtimeEve.Value.ToString("hh:mm tt")<br />
                                }

                                @if (item.ShowtimeMat != null)
                                {
                                    @Html.DisplayNameFor(model => model.ShowtimeMat) <span> : </span> @item.ShowtimeMat.Value.ToString("hh:mm tt")<br />
                                }

                            </p>
                        </div>
                        <div class="col-4">
                            @*Large button that sits halfway down the card
                                  <button type="submit" class="get-ticket-btn btn palette-container my-3 text-captialize text-center font-weight-bold">Get Tickets!</button>
                                @*  @Html.DisplayFor(modelItem => item.TicketLink) ..................Ticket Link Info *@
                        </div>
                        @*verifies role of user and only displays edit/delete links if logged in as admin*@
                        @if (User.IsInRole("Admin"))
                        {
                            <p>
                            @Html.ActionLink("Edit", "Edit", new { id = item.ProductionId }) | @*This part left in for debugging purposes*@
                            @Html.ActionLink("Delete", "Delete", new { id = item.ProductionId }) | 
                            </p>
                        }
                        <p>
                        @Html.ActionLink("Details", "Details", new { id = item.ProductionId }) |
                        @Html.ActionLink("Back to List", "Index")
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@*<p>..................................................Scaffold Code..............................................
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Playwright)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OpeningDay)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ClosingDay)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Image)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShowtimeEve)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShowtimeMat)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketLink)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Playwright)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OpeningDay)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ClosingDay)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Image)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ShowtimeEve)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ShowtimeMat)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TicketLink)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ProductionId }) |
                    @Html.ActionLink("Details", "Details", new { id = item.ProductionId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.ProductionId })
                </td>
            </tr>
        }*@

