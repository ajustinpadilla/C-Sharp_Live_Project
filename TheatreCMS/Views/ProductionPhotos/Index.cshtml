@using TheatreCMS.Controllers
@model IEnumerable<TheatreCMS.Models.ProductionPhotos>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<label id="dummy">Filter by Production</label>
@Html.DropDownList("ProductionList", (IEnumerable<SelectListItem>)ViewData["ProductionList"], "All")

<p>
    @Html.ActionLink("Create New", "Create")

</p>


@foreach (var pro in Model.Select(i => i.Production).Distinct())
{
    <div id="@pro.ProductionId-prodphoto-show" class="prodphoto-cards">
        <h3>@pro.Title <span class="badge badge-pill badge-light">@pro.Season</span></h3>
        <div class="card-group">
            @foreach (var item in Model.Where(i => i.Production.Title == pro.Title))
            {
                <div class="card">
                    <img class="card-img-top" src="@Url.Action("DisplayPhoto", "Photo", new { id = item.PhotoId })" alt="Production Photo">
                    <div class="card-body">
                        <h5 class="card-title text-dark">@Html.DisplayFor(modelItem => item.Title)</h5>
                        <p class="card-text text-secondary">@Html.DisplayFor(modelItem => item.Description)</p>
                    </div>
                    <div class="card-footer">
                        @Html.ActionLink("Edit", "Edit", new { id = item.ProPhotoId }, new { @class = "badge badge-pill badge-danger" }) |
                        @Html.ActionLink("Details", "Details", new { id = item.ProPhotoId }, new { @class = "badge badge-pill badge-danger" }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.ProPhotoId }, new { @class = "badge badge-pill badge-danger" })
                    </div>
                </div>

            }
        </div>
        <br /><br />
    </div>
}

<script src="/Scripts/jquery-3.4.1.js"></script>
<script>
    //sets opacity of card-footer to 1 when mouse hovers over card
    $(".card").hover(
        function () {
        $(this).find(".card-footer").fadeTo(400, 1)
        },
        function () {
        $(this).find(".card-footer").fadeTo(400, 0);
        }
    );

    //sets the Card-groups display style to 'none' or 'block' based on which option was selected in the dropdown list
    var filter = document.getElementById("ProductionList");
    var allCards = document.getElementsByClassName("prodphoto-cards");

    filter.addEventListener("change", function () {
        for (var i = 0; i < allCards.length; i++) {
            allCards[i].style.display = 'none';
        }

        if (filter.selectedIndex == 0) {
            for (var i = 0; i < allCards.length; i++) {
                allCards[i].style.display = 'block';
            }
        }
        else {
            var prodFilter = filter.options[filter.selectedIndex].value
            var filterId = prodFilter + "-prodphoto-show";
            document.getElementById(filterId).style.display = 'block';
        }
    });


</script>

@*  old code
    <table class="table-styling">
        <tr class="tr-styling">
            <th class="th-styling">
                @Html.DisplayNameFor(model => model.PhotoId)
            </th>
            <th class="th-styling">
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th class="th-styling">
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr class="tr-styling">
                /@/*/@Html.DisplayFor(modelItem => item.PhotoId)/*/@/
                <td class="td-styling">
                    <img src='@Url.Action("DisplayPhoto", "Photo", new { id = item.PhotoId })' />
                </td>

                <td class="td-styling">
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td class="td-styling">
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td class="td-styling">
                    @Html.ActionLink("Edit", "Edit", new { id = item.ProPhotoId }) |
                    @Html.ActionLink("Details", "Details", new { id = item.ProPhotoId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.ProPhotoId })
                </td>
                </tr>
                }

                </table>
*@
