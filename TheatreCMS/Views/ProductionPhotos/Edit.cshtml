@using TheatreCMS.Controllers
@model TheatreCMS.Models.ProductionPhotos

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "ProductionPhotos", null, FormMethod.Post, new { enctype = "multipart/form-data" }))


{
    @Html.AntiForgeryToken()
    <div class="formContainer2 ">
        <div class="form-horizontal">
            <h4 class="formHeader">ProductionPhotos</h4>
            <hr />
            <div class="inputBox2">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.Production, htmlAttributes: new { @class = "control-label col-md-4 inputLabel" })
                    <div class="col-md-10 formBox">
                        @Html.DropDownList("Productions", (IEnumerable<SelectListItem>)ViewData["Productions"], htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Production)
                    </div>
                </div>

                <div class="form-group">
                    Current @Html.LabelFor(model => model.PhotoId, htmlAttributes: new { @class = "control-label inputLabel" })
                    <div class="col-md-10 formBox">
                        <img class="medium_size" src='@Url.Action("DisplayPhoto", "Photo", new { id = Model.PhotoId })' />   
                        <hr />
                        @Html.ValidationMessageFor(model => model.PhotoId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    Choose New @Html.LabelFor(model => model.PhotoId, htmlAttributes: new { @class = "control-label inputLabel" })
                    <div class="col-md-10 formBox">
                        <input class="fileSelect" type="file" name="file" id="input1" accept="image/*" />
                          <img id="imagepreview1" class="medium_size" />
                        <hr />
                        @Html.ValidationMessageFor(model => model.PhotoId, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-4 inputLabel" })
                    <div class="col-md-10 formBox">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4 inputLabel" })
                    <div class="col-md-10 formBox">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10 formBox">
                        <input type="submit" value="Create" class="submitButton2" />
                    </div>
                </div>

            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script>
  function readURL(input) {

    if (input.files && input.files[0]) {
        var reader = new FileReader();

        reader.onload = function (e) {
            $('#imagepreview1').prop('src', e.target.result).show();
        }

        reader.readAsDataURL(input.files[0]);
    }
}

$("#input1").change(function () {
    readURL(this);
    $('#imagepreview1').show();
});
</script>