@model TheatreCMS.Models.Sponsor

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "Sponsors", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="formContainer2 ">
        <div class="form-horizontal">
            <h4 class="formHeader">Sponsor</h4>
            <hr />
            <div class="inputBox2">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-4 inputLabel" })
                    <div class="col-md-10 formBox">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Logo, htmlAttributes: new { @class = "control-label col-md-4 inputLabel" })
                    <div class="col-md-10 formBox">
                        @Html.TextBoxFor(model => model.Logo, new { type = "file", Name = "upload", Id = "Logo", Class = "fileSelect" })
                        @*@Html.EditorFor(model => model.Logo, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.Logo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label col-md-4 inputLabel" })
                    <div class="col-md-10 formBox">
                        @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Width, htmlAttributes: new { @class = "control-label col-md-4 inputLabel" })
                    <div class="col-md-10 formBox">
                        @Html.EditorFor(model => model.Width, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Width, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Current, htmlAttributes: new { @class = "control-label col-md-2 inputLabel" })
                    <div class="col-md-10 formBox">
                        @Html.CheckBox("Current", true)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10 formBox">
                            <button type="submit" class="iconSubmitBtn"><!-- This is the create form submit button -->
                                <i class="fa fa-plus-square fa-fw"></i>Create
                            </button>                        
                        <!--<input type="submit" value="Create" class="submitButton2" />-->
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div>
    <div class="iconBtnContainer">
        <button class="iconBtn">
            <i class="fa fa-hand-point-left fa-fw"></i><a @Html.ActionLink("Back to List", "Index")> <!-- This button is a link to a different page-->
        </button>
    </div>

    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
