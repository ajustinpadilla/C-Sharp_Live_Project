@using TheatreCMS.Controllers
@model TheatreCMS.Models.CastMember

@{
  ViewBag.Title = "Details";
}


  <div class=" container-fluid">
    <div class=" detailsContainer">
      <div class="topPadding  outsideBorder">
        <h2 class="topPadding text-center"> @Html.DisplayFor(model => model.Name)</h2>





        <hr />

        <div class="text-center justify-content-start col-md ">
          <div class=" col-md">
           

              @{
                string img = "";
                if (Model.Photo != null)
                {
                  byte[] thumbBytes = ImageUploadController.ImageThumbnail(Model.Photo, 100, 100);
                  var base64 = System.Convert.ToBase64String(thumbBytes);
                  img = String.Format("data:image/png;base64,{0}", base64);
                }
              }

              <img src="/Content/Images/CastMember.jpg" class="imgRouned large_size" />
            
          </div>
          <p>
            @*making space between photo and rest of details*@
          </p>


         

          <div class="photoPad text-center">

            <div class=" row">
              <div class=" col-md-6">
                User Name:
              </div>

              <div class="datafont col-md-6">
                @ViewBag.CurrentUser
              </div>
            </div>

            <div class="row">
              <div class=" col-md-6">
                @Html.DisplayNameFor(model => model.YearJoined)
              </div>


              <div class="datafont col-md-6">
                @Html.DisplayFor(model => model.YearJoined)
              </div>
            </div>


            <div class=" row">
              <div class=" col-md-6">
                @Html.DisplayNameFor(model => model.MainRole)
              </div>

              <div class="datafont col-md-6">
                @Html.DisplayFor(model => model.MainRole)
              </div>
            </div>

            <div class=" row">
              <div class=" col-md-6">
                @Html.DisplayNameFor(model => model.Bio)
              </div>

              <div class="datafont col-md-6">
                @Html.DisplayFor(model => model.Bio)
              </div>
            </div>






            <div class=" row">
              <div class=" col-md-6">
                @Html.DisplayNameFor(model => model.AssociateArtist)
              </div>

              <div class="datafont col-md-6">
                @Html.DisplayFor(model => model.AssociateArtist)
              </div>
            </div>
            <div class=" row">
              <div class=" col-md-6">
                @Html.DisplayNameFor(model => model.EnsembleMember)
              </div>

              <div class="datafont col-md-6">
                @Html.DisplayFor(model => model.EnsembleMember)
              </div>
            </div>
            <div class=" row ">
              <div class=" col-md-6">
                @Html.DisplayNameFor(model => model.CastYearLeft)
              </div>

              <div class="datafont col-md-6">
                @Html.DisplayFor(model => model.CastYearLeft)
              </div>
            </div>
            <div class=" row">
              <div class=" col-md-6">
                @Html.DisplayNameFor(model => model.DebutYear)
              </div>

              <div class="datafont col-md-6">
                @Html.DisplayFor(model => model.DebutYear)
              </div>
            </div>
            <div class=" row">
              <div class="datafont col-md-6">
                @Html.DisplayNameFor(model => model.CurrentMember)
              </div>

              <div class="datafont col-md-6">
                @Html.DisplayFor(model => model.CurrentMember)
              </div>

            </div>
            <div class="justify-content-end col-md-6">
              <div>
                @if (Model.Parts.Count() != 0)
                {
                  <div>
                    @Html.DisplayNameFor(model => model.Parts)
                  </div>
                  foreach (var role in Model.Parts)
                  {
                    <div>
                      <a href="/Part/Details/@role.PartID">@Html.DisplayFor(model => role.Character)</a>
                    </div>
                  }
                }
              </div>
            </div>
          </div>

        </div>
        <div class="mybutton ">
          <p>
            @if (User.IsInRole("Admin"))
            {

            
              <div class=" iconBtn ">
                <div class=" buttonsize" ;>
                  <a href='@Url.Action("Edit", "CastMembers", new { id = Model.CastMemberID })'> Edit </a>





                </div>
              </div>
            
              

             


            }

          <div class=" iconBtn">
            <div class=" buttonsize">
              <a href='@Url.Action("Index", "CastMembers")'> Back To List</a>
            </div>
          </div>

          </p>
            
        </div>
        </div>
        
      </div>


    </div> 
 

