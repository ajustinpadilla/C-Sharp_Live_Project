@model TheatreCMS.Models.AdminSettings

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    ViewBag.Title = "Dashboard";
}

<!DOCTYPE html>

<h2>Dashboard</h2>

<ul>
    <li>
        @Html.ActionLink("Info", "Index", "DisplayInfo")
    </li>
    <li>
        @Html.ActionLink("Display Links", "Index", "DisplayLinks")
    </li>
    <li>
        @Html.ActionLink("Sponsors", "Index", "Sponsors")
    </li>
    <li>
        @Html.ActionLink("Content Section", "Index", "ContentSection")
    </li>
    <li>
        @Html.ActionLink("Productions", "Index", "Productions")
    </li>
    <li>
        @Html.ActionLink("Cast Members", "Index", "CastMembers")
    </li>
    <li>
        @Html.ActionLink("Part", "Index", "Part")
    </li>
    <li>
        @Html.ActionLink("Subscriber", "Index", "Subscribers/Subscriber")
    </li>
    <li>
        @Html.ActionLink("Rental Request", "Index", "RentalRequest")
    </li>
    <li>
        @Html.ActionLink("Donor List", "Index", "Admin/DonorList")
    </li>
</ul>



@using (Html.BeginForm("SettingsUpdate", "Admin", FormMethod.Post, new { role = "form" }))
{


<div>


    CURRENT SEASON:
    <input type="number" name="Current_Season" value="@Html.DisplayFor(model => model.current_season)"><br />
    SEASON PRODUCTIONS:<br />
    <div class="form-group">
        @Html.DropDownListFor(m => m.Production, // 1. Store selected value in Model.Production;
                                                // when page is rendered after postback,
                                                // take selected value from Model.State.

                              // 2. Take list of values from Model.Productions
                              Model.Productions,

                              // 3. Text for the first 'default' option
                              "- Please select a production -",

                              //4. A class name to assign to <select> tag
                              new { @class = "form-control" })
    </div>



    Winter:<input type="number" name="Fall" value="@Html.DisplayFor(model => model.season_productions.fall)"><br>
    Fall:<input type="number" name="Winter" value="@Html.DisplayFor(model => model.season_productions.winter)"><br>
    Spring:<input type="number" name="Spring" value="@Html.DisplayFor(model => model.season_productions.spring)"><br>
    RECENT DEFINITION: Range of time to determine if a Donor is a recent Donor<br />
    Span(measured in months):<input type="number" name="Span" value="@Html.DisplayFor(model => model.recent_definition.span)"><br>
    Date:
    <input type="date" name="Date" value="@Model.recent_definition.date.ToString("yyyy-MM-dd")">
    <br>
    ONSTAGE:
    @*<input type="number" name="Onstage" value="@Html.DisplayFor(model => model.onstage)">*@
    <br />
    <div class="form-group">
        @Html.DropDownListFor(m => m.Production, // 1. Store selected value in Model.Production;
                                                // when page is rendered after postback,
                                                // take selected value from Model.State.

                              // 2. Take list of values from Model.Productions
                              Model.Productions,

                              // 3. Text for the first 'default' option
                              "- Please select a production -",

                              //4. A class name to assign to <select> tag
                              new { @class = "form-control" })
    </div>
    <button type="submit">Submit</button>
</div>
}