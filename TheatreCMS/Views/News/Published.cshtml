@model IEnumerable<TheatreCMS.Models.News>

@{
    ViewBag.Title = "Published";
}
<link href="https://cdn.jsdelivr.net/npm/summernote@0.8.16/dist/summernote.min.css" rel="stylesheet">

<h2 class="m-3">Published</h2>
@Html.AntiForgeryToken()

@*view when user is anyone but an admin*@
@if (!User.IsInRole("Admin"))
{
    <div>
        @foreach (var item in Model)
        {
            <div class="card text-dark bg-light mt-5 mx-auto card-news">
                <div class="card-body">
                    <h5 class="card-title">@item.Headline</h5>
                    <p class="card-text">@item.Content</p>
                </div>
                <div class="card-footer">
                    <small class="text-muted">Posted on @item.PublishDate.GetValueOrDefault().ToString("d")</small>
                </div>
            </div>
        }

    </div>
}

@*view when user is an admin*@
else
{
    <!--Button trigger modal -->
    <div class="mx-5">
        <button type="button" class="btn btn-primary news-addModal-btn" data-url="@Url.Action("Create")">
            Add Post
        </button>
    </div>

    <!-- Modal for Adding Post -->
    <div class="modal fade" id="news-addModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-dark" id="news-addModal-Label">Add News Post</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body text-dark">
                </div>
            </div>
        </div>
    </div>

    <div>
        @foreach (var item in Model)
        {

            <div class="admin-card text-primary bg-light mt-5 mx-auto card-news">
                <div class="card-body">
                    <div class="news-headline-container">
                        <div id="headline-sn" style="display:inline-block">
                            <h5 class="card-title" id="@item.NewsId-headline">
                                @item.Headline
                            </h5>
                        </div>
                        <span class="badge badge-pill badge-success title-save" action="@Url.Action("Edit", new { id = item.NewsId })" id="@item.NewsId">Save</span>
                        <span class="badge badge-pill badge-primary title-edit">Edit</span>
                    </div>
                    <div class="news-content-container">
                        <div id="content-sn" style="display:inline-block">
                            <p class="card-text" id="@item.NewsId-content">
                                @item.Content
                            </p>
                        </div>
                        <span class="badge badge-pill badge-success content-save" action="@Url.Action("Edit", new { id = item.NewsId })" id="@item.NewsId">Save</span>
                        <span class="badge badge-pill badge-primary content-edit">Edit</span>
                    </div>
                </div>
                <div class="card-footer">
                    @if (item.PublishDate.HasValue)
                    {
                        <small class="text-muted" data-news="@item.PublishDate" id="@item.NewsId-publish">Posted on @item.PublishDate.GetValueOrDefault().ToString("d") <span> | </span> </small>
                    }
                    @if (item.CreateDate.HasValue)
                    {
                        <small class="text-muted" data-news="@item.CreateDate" id="@item.NewsId-create">Created on @item.CreateDate.GetValueOrDefault().ToString("d") <span> | </span> </small>
                    }
                    @if (item.LastSaveDate.HasValue)
                    {
                        <small class="text-muted" data-news="@item.LastSaveDate" id="@item.NewsId-lastsave">Last saved on @item.LastSaveDate.GetValueOrDefault().ToString("d") <span> | </span> </small>
                    }
                    @if (item.EmailDate.HasValue)
                    {
                        <small class="text-muted" data-news="@item.EmailDate" id="@item.NewsId-email">Email sent on @item.EmailDate.GetValueOrDefault().ToString("d") <span> | </span> </small>
                    }
                    <small class="text-muted" data-news="@item.Hidden" id="@item.NewsId-hidden">Hidden: @item.Hidden</small>
                    <p class="card-actions my-0">
                        @if (!item.PublishDate.HasValue)
                        {
                            <span class="badge badge-pill badge-info news-publish" action="@Url.Action("Edit", new { id = item.NewsId })" id="@item.NewsId">Publish</span>
                            <span class="badge badge-pill badge-danger news-delete" action="@Url.Action("Delete", new { id = item.NewsId })" id="@item.NewsId">Delete</span>
                        }

                        else if (@item.Hidden)
                        {
                            <span class="badge badge-pill badge-warning news-unhide" action="@Url.Action("Edit", new { id = item.NewsId })" id="@item.NewsId">Unhide</span>
                        }
                        else
                        {
                            <span class="badge badge-pill badge-secondary news-hide" action="@Url.Action("Edit", new { id = item.NewsId })" id="@item.NewsId">Hide</span>
                        }
                    </p>
                </div>
            </div>
        }
    </div>
}


@* <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
        <script src="~/Scripts/popper.js" defer></script>
    @Scripts.Render("~/bundles/summernote")*@

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")

<script src="https://unpkg.com/%40popperjs/core@2"></script>
<script src="https://cdn.jsdelivr.net/npm/summernote@0.8.16/dist/summernote.min.js" defer></script>


<script>

    //adds post via modal by loading 'news/create.cshtml' and routing through it
    $('.news-addModal-btn').on('click', function () {
        var createUrl = $(this).attr("data-url");
        $('.modal-body').load(createUrl + " .news-createForm", function () {
            $('#news-addModal').modal({ show: true });
        });
    });

    //toggles edit badge upon hover of post headline
    $(".admin-card .news-headline-container").hover(
        function () {
            $(this).find(".title-edit").show();
        },
        function () {
            $(this).find(".title-edit").hide();
        },
    );

    //toggles edit badge upon hover of post content
    $(".admin-card .news-content-container").hover(
        function () {
            $(this).find(".content-edit").show();
        },
        function () {
            $(this).find(".content-edit").hide();
        },
    );

    //edit - summernote editor for headline
    $(document).ready(function () {
        $(".admin-card .title-edit").on('click', function () {
            $(this).siblings("#headline-sn").summernote({ focus: true });
            $(this).siblings(".title-save").show();
            console.log("headline edit button clicked");
        });

    });

    //save - summernote editor for headline
    $(document).ready(function () {
        $(".admin-card .title-save").on('click', function () {
            var markup = $(this).siblings("#headline-sn").summernote('code');
            $(this).siblings("#headline-sn").summernote('destroy');
            $(this).hide();

            //clicking the save button posts a HttpPost request to /News/Edit/NewsID to update headline
            saveEdit(this);
        });

    });

    //edit - summernote editor for content
    $(document).ready(function () {
        $(".admin-card .content-edit").on('click', function () {
            $(this).siblings("#content-sn").summernote({ focus: true });
            $(this).siblings(".content-save").show();
            console.log("content edit button clicked");
        });

    });

    //save - summernote editor for content
    $(document).ready(function () {
        $(".admin-card .content-save").on('click', function () {
            var markup = $(this).siblings("#content-sn").summernote('code');
            $(this).siblings("#content-sn").summernote('destroy');
            $(this).hide();

            //clicking the save button posts a HttpPost request to /News/Edit/NewsID to update content
            saveEdit(this);
        });

    });


    //function to POST a request to /News/Edit/NewsID and set LastSaveDate to Now
    function saveEdit(obj) {
            var targetUrl = $(obj).attr("action");
            var targetId = $(obj).attr("id");
            $.ajax({
                type: 'POST',
                url: targetUrl,
                data: {
                    "__RequestVerificationToken":
                        $("input[name=__RequestVerificationToken]").val(),
                    NewsId: targetId,
                    Headline: $("#" + targetId + "-headline").text(),
                    Content: $("#" + targetId + "-content").text(),
                    CreateDate: $("#" + targetId + "-create").attr("data-news"),
                    LastSaveDate: "@DateTime.Now",
                    EmailDate: $("#" + targetId + "-email").attr("data-news"),
                    PublishDate: $("#" + targetId + "-publish").attr("data-news"),
                    Hidden: $("#" + targetId + "-hidden").attr("data-news")
                },
                success: function () {
                    setTimeout(function () { location.reload() }, 100);
                },
                error: function () {
                    alert("An error has occurred.");
                }

            });
    }



    //delete: deletes the post upon clicking the delete badge by posting a request to /news/delete/NewsId
    $(document).ready(function () {
        $(".news-delete").on('click', function () {
            if (confirm("Are you sure you want to delete this post?")) {
                var targetUrl = $(this).attr("action");
                $.ajax({
                    type: 'POST',
                    url: targetUrl,
                    data: {
                        "__RequestVerificationToken":
                            $("input[name=__RequestVerificationToken]").val()
                    },
                    success: function () {
                        setTimeout(function () { location.reload() }, 100);
                    },
                    error: function () {
                        alert("An error has occurred.");
                    }
                });
            };
        });
    })

    //publish: update post's PublishDate from null to Now by httpPost to 'news/edit/NewsId'
    $(document).ready(function () {
        $(".news-publish").on('click', function () {
            if (confirm("Are you sure you want to publish this post?")) {

                var targetUrl = $(this).attr("action");
                var targetId = $(this).attr("id");
                $.ajax({
                    type: 'POST',
                    url: targetUrl,
                    data: {
                        "__RequestVerificationToken":
                            $("input[name=__RequestVerificationToken]").val(),
                        NewsId: targetId,
                        Headline: $("#" + targetId + "-headline").html(),
                        Content: $("#" + targetId + "-content").html(),
                        CreateDate: $("#" + targetId + "-create").attr("data-news"),
                        LastSaveDate: $("#" + targetId + "-lastsave").attr("data-news"),
                        EmailDate: $("#" + targetId + "-email").attr("data-news"),
                        PublishDate: "@DateTime.Now",
                        Hidden: $("#" + targetId + "-hidden").attr("data-news")
                    },
                    success: function () {
                        setTimeout(function () { location.reload() }, 100);
                    },
                    error: function () {
                        alert("An error has occurred.");
                    }

                });
            };
        });
    })

    //hide: update post's Hidden prop from false to true by httpPost to 'news/edit/NewsId'
    $(document).ready(function () {
        $(".news-hide").on('click', function () {
            if (confirm("Are you sure you want to hide this post?")) {

                var targetUrl = $(this).attr("action");
                var targetId = $(this).attr("id");
                $.ajax({
                    type: 'POST',
                    url: targetUrl,
                    data: {
                        "__RequestVerificationToken":
                            $("input[name=__RequestVerificationToken]").val(),
                        NewsId: targetId,
                        Headline: $("#" + targetId + "-headline").html(),
                        Content: $("#" + targetId + "-content").html(),
                        CreateDate: $("#" + targetId + "-create").attr("data-news"),
                        LastSaveDate: $("#" + targetId + "-lastsave").attr("data-news"),
                        EmailDate: $("#" + targetId + "-email").attr("data-news"),
                        PublishDate: $("#" + targetId + "-publish").attr("data-news"),
                        Hidden: "true"
                    },
                    success: function () {
                        setTimeout(function () { location.reload() }, 100);
                    },
                    error: function () {
                        alert("An error has occurred.");
                    }

                });
            };
        });
    })

    //unhide: update post's Hidden prop from true to false by httpPost to 'news/edit/NewsId'
    $(document).ready(function () {
        $(".news-unhide").on('click', function () {
            if (confirm("Are you sure you want to unhide this post?")) {

                var targetUrl = $(this).attr("action");
                var targetId = $(this).attr("id");
                $.ajax({
                    type: 'POST',
                    url: targetUrl,
                    data: {
                        "__RequestVerificationToken":
                            $("input[name=__RequestVerificationToken]").val(),
                        NewsId: targetId,
                        Headline: $("#" + targetId + "-headline").html(),
                        Content: $("#" + targetId + "-content").html(),
                        CreateDate: $("#" + targetId + "-create").attr("data-news"),
                        LastSaveDate: $("#" + targetId + "-lastsave").attr("data-news"),
                        EmailDate: $("#" + targetId + "-email").attr("data-news"),
                        PublishDate: $("#" + targetId + "-publish").attr("data-news"),
                        Hidden: "false"
                    },
                    success: function () {
                        setTimeout(function () { location.reload() }, 100);
                    },
                    error: function () {
                        alert("An error has occurred.");
                    }

                });
            };
        });
    })

</script>
