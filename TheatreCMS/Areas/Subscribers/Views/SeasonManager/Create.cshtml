@model TheatreCMS.Areas.Subscribers.Models.SeasonManager

@{
    ViewBag.Title = "Create";
}

<div class="text-center">

<h2>Create</h2>

@*Commented out code below is to remove checkboxes from form. Commented it out instead of deleting it. - LR 1/21/20 *@


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="formContainer3">
        <h4>SeasonManager</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="formGroup">
            @Html.LabelFor(model => model.SeasonManagerPerson, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("dbUsers", (IEnumerable<SelectListItem>)ViewData["dbUsers"])
            </div>
        </div>

        <div class="formGroup">
            @Html.LabelFor(model => model.NumberSeats, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumberSeats, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumberSeats, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="formGroup">
            @Html.LabelFor(model => model.BookedCurrent, htmlAttributes: new { @class = "control-label col-md-2 text-center" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.BookedCurrent)
                    @Html.ValidationMessageFor(model => model.BookedCurrent, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="formGroup">
            @Html.LabelFor(model => model.FallProd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FallProd, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FallProd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="formGroup">
            @Html.LabelFor(model => model.FallTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FallTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FallTime, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.BookedFall, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.BookedFall)
                        @Html.ValidationMessageFor(model => model.BookedFall, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@

        <div class="formGroup">
            @Html.LabelFor(model => model.WinterProd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WinterProd, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WinterProd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="formGroup">
            @Html.LabelFor(model => model.WinterTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WinterTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WinterTime, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.BookedWinter, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.BookedWinter)
                        @Html.ValidationMessageFor(model => model.BookedWinter, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@

        <div class="formGroup">
            @Html.LabelFor(model => model.SpringProd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SpringProd, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SpringProd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="formGroup">
            @Html.LabelFor(model => model.SpringTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SpringTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SpringTime, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.BookedSpring, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.BookedSpring)
                        @Html.ValidationMessageFor(model => model.BookedSpring, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@

        <div class="formGroup">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
